library("nlme", lib.loc="/usr/lib/R/library")
install.packages(c("ggplot2", "haven"))
ggplot2
install.packages("dplyr")
install.packages("readxl")
library("readxl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:readxl", unload=TRUE)
install.packages("readr")
install.packages("gridExtra")
csv_basic <- function(id) {
dat <- data.frame()
for (i in id) {
data.temp <- read.csv(file = paste(i, ".csv", sep=""))
dat <- rbind (dat,data.temp)
}
print(summary(dat))
csv_basic <- function(id) {
dat <- data.frame()
for (i in id) {
data.temp <- read.csv(file = paste(i, ".csv", sep=""))
dat <- rbind (dat,data.temp)
}
print(summary(dat))
}
csv_basic()
csv_basic()
csv_basic(1:2)
exit
exit
q()
}
csv_basic <- function(id) {
dat <- data.frame()
for (i in id) {
data.temp <- read.csv(file = paste(i, ".csv", sep=""))
dat <- rbind (dat,data.temp)
}
print(summary(dat))
}
csv_basic(1:2)
setwd("~/R/assignment_1")
csv_basic(1:2)
pollutantmean <- function(directory, pollutant, id) {
for (i in id) {
idF <- formatC(id,width=3,format="d",flag="0")
print(paste(directory, "/", idF, ".csv", sep=""))
mydata <- read.csv(file = paste(direc, "/", idF, ".csv", sep=""))
}
# print(head(mydata[[pollutant]]))
# mean(mydata[[pollutant]], na.rm = TRUE)
}
pollutantmean(specdata, nitrate, 1)
pollutantmean <- function(directory, pollutant, id) {
for (i in id) {
idF <- formatC(id,width=3,format="d",flag="0")
print(paste("directory", "/", idF, ".csv", sep=""))
mydata <- read.csv(file = paste(direc, "/", idF, ".csv", sep=""))
}
# print(head(mydata[[pollutant]]))
# mean(mydata[[pollutant]], na.rm = TRUE)
}
pollutantmean(specdata, nitrate, 1)
pollutantmean <- function(directory = specdata, pollutant, id) {
for (i in id) {
idF <- formatC(id,width=3,format="d",flag="0")
print(paste(directory, "/", idF, ".csv", sep=""))
mydata <- read.csv(file = paste(directory, "/", idF, ".csv", sep=""))
}
}
pollutantmean <- function(directory = specdata, pollutant, id) {
for (i in id) {
idF <- formatC(id,width=3,format="d",flag="0")
print(paste(directory, "/", idF, ".csv", sep=""))
mydata <- read.csv(file = paste(directory, "/", idF, ".csv", sep=""))
}
# print(head(mydata[[pollutant]]))
# mean(mydata[[pollutant]], na.rm = TRUE)
}
pollutantmean(pollutant= nitrate, id = 1)
csv_basic <- function(directory, id) {
dat <- data.frame()
for (i in id) {
data.temp <- read.csv(file = paste(directory, "/", i, ".csv", sep=""))
dat <- rbind (dat,data.temp)
}
print(summary(dat))
}
csv_basic(specdata, 100:101)
printDir <- function(directory) {
print(paste(directory, "/", sep=""))
}
printDir(assig)
csv_basic <- function(id) {
dat <- data.frame()
for (i in id) {
data.temp <- read.csv(file = paste(i, ".csv", sep=""))
dat <- rbind (dat,data.temp)
}
print(summary(dat))
}
csv_basic(1:2)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
paste(directory, pollutant, id, sep="")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean(zdir, ypol, 1)
pollutantmean <- function(direX, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
paste(direX, pollutant, id, sep="")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean(assi, zpol, 3)
pollutantmean <- function(direX, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
direXchar <- as.character(direX)
paste(direXchar, pollutant, id, sep="")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean(assi, zpol, 3)
pollutantmean <- function(direX, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(direX)
paste(direX, pollutant, id, sep="")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean(assi, zpol, 3)
pollutantmean <- function(directory) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(directory)
print(paste(directory, "yeah"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean(blah)
pollutantmean <- function(x) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(x)
print(paste(x, "yeah"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean(blah)
print(blah)
pollutantmean <- function(x) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
blah <- x
print(blah)
print(paste(blah, "yeah"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
blah <- 2
pollutantmean <- function(x) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
blah <- x
print(blah)
print(paste(blah, "yeah"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean(blah)
pollutantmean <- function(directory = specdata, pollutant, id) {
for (i in id) {
idF <- formatC(id,width=3,format="d",flag="0")
dirPaste <- as.character(directory)
print(paste(dirPaste, "/", idF, ".csv", sep=""))
mydata <- read.csv(file = paste(dirPaste, "/", idF, ".csv", sep=""))
}
# print(head(mydata[[pollutant]]))
# mean(mydata[[pollutant]], na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id) {
for (i in id) {
idF <- formatC(id,width=3,format="d",flag="0")
dirPaste <- as.character(directory)
print(paste(dirPaste, "/", idF, ".csv", sep=""))
mydata <- read.csv(file = paste(dirPaste, "/", idF, ".csv", sep=""))
}
# print(head(mydata[[pollutant]]))
# mean(mydata[[pollutant]], na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id) {
for (i in id) {
idF <- formatC(id,width=3,format="d",flag="0")
dirPaste <- as.character(directory)
print(paste(dirPaste, "/", idF, ".csv", sep=""))
mydata <- read.csv(file = paste(dirPaste, "/", idF, ".csv", sep=""))
}
# print(head(mydata[[pollutant]]))
# mean(mydata[[pollutant]], na.rm = TRUE)
}
pollutantmean(blah, nitrate, 2)
pollutantmean(specdata, nitrate, 100)
rm(blah)
pollutantmean(blah, nitrate, 2)
pollutantmean <- function(x) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
blah <- x
print(blah)
print(paste(blah, "yeah"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean(blah)
pollutantmean(x = blah)
pollutantmean(x = blaha)
pollutantmean <- function(x) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(x)
print(paste(x, "yeah"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean(x = blaha)
addtwo <- function(x, y) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
x + y
print(x,y)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
addtwo(2,3)
addtwo <- function(x, y) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
x + y
print(x+y)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
addtwo(2,3)
addtwo <- function(x, y) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(x)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
addtwo(2,3)
addtwo <- function(directory, y) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(directory)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
addtwo(2,3)
addtwo(spec,3)
addtwo(2,3)
addtwo(directory = dir,3)
addtwo(directory = dir,3)
addtwo <- function(directory, y) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(directory)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
addtwo(directory = dir,3)
addtwo(dir,3)
add.two <- function(directory, y) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
print(directory)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
add.two(dir,3)
add.two(dir, 3)
